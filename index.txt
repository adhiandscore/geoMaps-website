// Inisialisasi map
var map = L.map('maps').setView([51.505, -0.09], 13);
L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);

// Array untuk menyimpan marker dan polygon
var markers = [];
var polygons = [];

// Variabel untuk menyimpan marker atau polygon yang dipilih
var selectedMarker = null;
var selectedPolygon = null;

// Tambahkan marker saat peta diklik
map.on('click', function(event) {
    var latLng = event.latlng;

    // Tambahkan marker ke peta
    var marker = L.marker([latLng.lat, latLng.lng], { draggable: true }).addTo(map);

    // Simpan marker di array
    markers.push(marker);

    // Tambahkan event klik pada marker untuk memilihnya
    marker.on('click', function() {
        // Tanda marker terpilih
        selectedMarker = marker;
        alert("Marker dipilih: " + marker.getLatLng());
    });

    // Perbarui polygon jika ada titik baru
    updatePolygon();
});

// Fungsi untuk memperbarui polygon
function updatePolygon() {
    // Ambil semua koordinat dari marker
    var latlngs = markers.map(function(marker) {
        return marker.getLatLng();
    });

    // Hapus polygon lama jika ada
    if (polygons.length > 0) {
        polygons.forEach(polygon => polygon.remove());
        polygons = [];
    }

    // Tambahkan polygon baru
    if (latlngs.length >= 3) {
        var polygon = L.polygon(latlngs, {
            color: 'blue',
            fillColor: '#3388ff',
            fillOpacity: 0.4
        }).addTo(map);

        // Tambahkan event klik pada polygon untuk memilihnya
        polygon.on('click', function() {
            selectedPolygon = polygon;
            alert("Polygon terpilih!");
        });

        polygons.push(polygon);
    }
}

// Fungsi untuk menghapus marker terpilih
function clearSelectedMarker() {
    if (selectedMarker) {
        map.removeLayer(selectedMarker);
        markers = markers.filter(marker => marker !== selectedMarker);
        selectedMarker = null;
        updatePolygon(); // Perbarui polygon
    } else {
        alert("Tidak ada marker terpilih.");
    }
}

// Fungsi untuk menghapus polygon terpilih
function deleteSelectedPolygon() {
    if (selectedPolygon) {
        map.removeLayer(selectedPolygon);
        polygons = polygons.filter(polygon => polygon !== selectedPolygon);
        selectedPolygon = null;
    } else {
        alert("Tidak ada polygon terpilih.");
    }
}

// Fungsi untuk menyimpan koordinat polygon
function savePolygon() {
    if (polygons.length > 0) {
        var savedPolygons = polygons.map(polygon => polygon.getLatLngs());
        var jsonString = JSON.stringify(savedPolygons);

        // Simpan sebagai file JSON
        var blob = new Blob([jsonString], { type: 'application/json' });
        var link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = 'polygons.json';
        link.click();
        alert("Polygon disimpan!");
    } else {
        alert("Tidak ada polygon untuk disimpan.");
    }
}

// Event listener untuk tombol
document.getElementById('deleteSelectedPolygon').addEventListener('click', deleteSelectedPolygon);
document.getElementById('clearSelectedMarker').addEventListener('click', clearSelectedMarker);
document.getElementById('savePolygon').addEventListener('click', savePolygon);
